<?xml version="1.0" ?>
<launch>
  <arg name="gui" default="false" />
  <arg name="world_name" default="$(find mir_gazebo)/world/contact.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable, but can also be an absolute path -->

  <arg name="robot_x"   default="0.0" />
  <arg name="robot_y"   default="0.0" />
  <arg name="robot_yaw" default="0.0" />

  <arg name="mir_type" default="mir_100" doc="The MiR variant. Can be 'mir_100' or 'mir_250' for now." />

  <arg name="tf_prefix" default="" doc="tf_prefix to be used by gazebo plugins and in the robot's urdf etc." />

  <arg name="namespace" default="$(arg tf_prefix)" doc="Namespace to push all topics into."/>
  <arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface"/>
  
  <group if="$(eval namespace != '')">
    <group>
      <remap from="$(arg namespace)/joint_states"                   to="$(arg namespace)/mir/joint_states" />
      <remap from="$(arg namespace)/mobile_base_controller/cmd_vel" to="$(arg namespace)/cmd_vel" />
      <remap from="$(arg namespace)/mobile_base_controller/odom"    to="$(arg namespace)/odom" />

      <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="paused" value="false"/>
        <arg name="gui" value="$(arg gui)" />
      </include>
    </group>

    <group ns="$(arg namespace)">
      <!-- spawn robot and bring up controllers etc. -->
      <include file="$(find mir_gazebo)/launch/mir_gazebo_common.launch">
        <arg name="transmission_hw_interface" value="$(arg transmission_hw_interface)"/>
        <arg name="robot_x"   value="$(arg robot_x)" />
        <arg name="robot_y"   value="$(arg robot_y)" />
        <arg name="robot_yaw" value="$(arg robot_yaw)" />
        <arg name="mir_type"  value="$(arg mir_type)" />
        <arg name="tf_prefix" value="$(arg tf_prefix)" />
      </include>
    </group>
  </group>

  <!-- Duplicate of the above in case namespace is empty. This is necessary to
       avoid the "<group> tag has an empty 'ns' attribute" parsing error. -->
  <group unless="$(eval namespace != '')">
    <group>
      <remap from="joint_states"                   to="mir/joint_states" />
      <remap from="mobile_base_controller/cmd_vel" to="cmd_vel" />
      <remap from="mobile_base_controller/odom"    to="odom" />

      <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="paused" value="false" />
        <arg name="gui" value="$(arg gui)" />
      </include>
    </group>

    <!-- spawn robot and bring up controllers etc. -->
    <include file="$(find mir_gazebo)/launch/mir_gazebo_common.launch">
      <arg name="robot_x"   value="$(arg robot_x)" />
      <arg name="robot_y"   value="$(arg robot_y)" />
      <arg name="robot_yaw" value="$(arg robot_yaw)" />
      <arg name="mir_type"  value="$(arg mir_type)" />
      <arg name="tf_prefix" value="$(arg tf_prefix)" />
      <arg name="transmission_hw_interface" value="$(arg transmission_hw_interface)"/>
    </include>
  </group>


  <arg name="TOPIC_ARM_COMMAND" default="/joint_torque_controller/command_joint_torque"/>
  <arg name="TOPIC_WRENCH_STATE" default="/wrench"/>

  <param name="topic_cart_arm_state" value="/ee_state"/>
  <param name="topic_arm_state" value="/joint_torque_controller/joint_state"/>
  <param name="topic_arm_command" value="$(arg TOPIC_ARM_COMMAND)"/>
  <param name="topic_wrench_state" value="$(arg TOPIC_WRENCH_STATE)"/>
  
  <param name="topic_car_state" value="/base_pose_ground_truth"/>
    <param name="topic_car_imu" value="/imu_data"/>
  <param name="topic_car_command" value="/cmd_vel"/>

  <param name="topic_reference_cart_arm_state" value="/reference_ee_state"/>
  <param name="topic_reference_wrench_state" value="/reference_wrench"/>
  <param name="topic_reference_car_state" value="/reference_car_state"/>

  <param name="base_link" value="ur5ebase_link"/>
  <param name="end_link" value="ur5etool0"/>
  
  <rosparam file="$(find rel_impedance)/config/ImpedanceParams.yaml" command="load"/>
  
  <node pkg="rel_impedance" name="nokov_state_pub" type="nokov_state_pub.py" output="log"/>
  <node pkg="rel_impedance" name="impedance_node" type="rel_impedance_node" output="log"/>
  <node pkg="rel_impedance" name="reference_node" type="reference_node" output="log"/>
  <!-- <node pkg="rel_impedance" name="kalman_node" type="kalman.py" output="screen"/> -->
  <node pkg="rel_impedance" name="kalman_node" type="kalman.py" output="log"/>

</launch>
